name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Lint code
        run: flake8 .

      - name: Run tests with coverage
        run: |
          coverage run --source='.' manage.py test
          coverage report --fail-under=80
        env:
          DJANGO_SECRET_KEY: ${{ secrets.SECRET_KEY }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
    
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
        
      - name: Install dependencies
        run: pip install -r requirements.txt
        
      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
        
      - name: Build Docker image
        run: |
          docker build -t guwoop/oc_lettings_site:$GITHUB_SHA .
        
      - name: Push Docker image
        run: |
          docker push guwoop/oc_lettings_site:$GITHUB_SHA


  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Collect static files
        run: python manage.py collectstatic --noinput
        env:
          DJANGO_SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DJANGO_SETTINGS_MODULE: 'oc_lettings_site.settings'
          DEBUG: 'False'

      - name: Deploy to Render
        run: |
          curl -X POST "https://api.render.com/v1/services/SERVICE_ID/deploys" \
          -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
          -H "Content-Type: application/json" \
          -d '{"clearCache": true}'
